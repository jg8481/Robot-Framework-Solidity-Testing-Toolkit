<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.9.12 on darwin)" generated="20230205 23:27:38.136" rpa="false" schemaversion="3">
<suite id="s1" name="Robot Framework Solidity Smart Contract Hardhat Network Fantom Test" source="/Users/jgorospe/Documents/GitHub/Robot-Framework-Solidity-Testing-Toolkit_Current/solidity-hardhat-multichain-tools/robotframework-hardhat-test-keywords.robot">
<test id="s1-t1" name="HARDHAT ETHERS.JS TEST 1 : Get the deployed smart contract using the hardhat-ethers plugin object and check the result." line="9">
<kw name="Get Contract" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:38.711" level="INFO">${RESULT} = {'checkContract': {'interface': {'fragments': [{'name': None, 'type': 'constructor', 'inputs': [], 'payable': False, 'stateMutability': 'nonpayable', 'gas': None, '_isFragment': True}, {'name': 'Appro...</msg>
<status status="PASS" starttime="20230205 23:27:38.288" endtime="20230205 23:27:38.711"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${RESULT}</arg>
<arg>errorName</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:38.712" endtime="20230205 23:27:38.712"/>
</kw>
<tag>Forked_Mainnet_Test</tag>
<status status="PASS" starttime="20230205 23:27:38.287" endtime="20230205 23:27:38.712"/>
</test>
<test id="s1-t2" name="HARDHAT ETHERS.JS TEST 2 : Get token name from the the deployed smart contract and check the result." line="14">
<kw name="Get Name" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:39.446" level="INFO">${RESULT} = {'name': 'PumpNoDump'}</msg>
<status status="PASS" starttime="20230205 23:27:38.713" endtime="20230205 23:27:39.446"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>name</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:39.447" level="INFO">{'name': 'PumpNoDump'}</msg>
<status status="PASS" starttime="20230205 23:27:39.447" endtime="20230205 23:27:39.447"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.447" endtime="20230205 23:27:39.447"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.448" endtime="20230205 23:27:39.448"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.448" endtime="20230205 23:27:39.448"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.449" endtime="20230205 23:27:39.449"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.449" endtime="20230205 23:27:39.449"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.449" endtime="20230205 23:27:39.449"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.449" endtime="20230205 23:27:39.450"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:39.450" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:39.450" endtime="20230205 23:27:39.450"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.450" endtime="20230205 23:27:39.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.450" endtime="20230205 23:27:39.451"/>
</kw>
<status status="PASS" starttime="20230205 23:27:39.446" endtime="20230205 23:27:39.451"/>
</kw>
<status status="PASS" starttime="20230205 23:27:38.713" endtime="20230205 23:27:39.451"/>
</test>
<test id="s1-t3" name="HARDHAT ETHERS.JS TEST 3 : Get token symbol from the the deployed smart contract and check the result." line="18">
<kw name="Get Symbol" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:39.575" level="INFO">${RESULT} = {'symbol': 'PND'}</msg>
<status status="PASS" starttime="20230205 23:27:39.452" endtime="20230205 23:27:39.575"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>symbol</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:39.576" level="INFO">{'symbol': 'PND'}</msg>
<status status="PASS" starttime="20230205 23:27:39.576" endtime="20230205 23:27:39.576"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.576" endtime="20230205 23:27:39.577"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.577" endtime="20230205 23:27:39.577"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.577" endtime="20230205 23:27:39.578"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.578" endtime="20230205 23:27:39.578"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.578" endtime="20230205 23:27:39.579"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.579" endtime="20230205 23:27:39.579"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.579" endtime="20230205 23:27:39.580"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:39.580" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:39.580" endtime="20230205 23:27:39.580"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.581" endtime="20230205 23:27:39.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.581" endtime="20230205 23:27:39.581"/>
</kw>
<status status="PASS" starttime="20230205 23:27:39.575" endtime="20230205 23:27:39.582"/>
</kw>
<status status="PASS" starttime="20230205 23:27:39.451" endtime="20230205 23:27:39.582"/>
</test>
<test id="s1-t4" name="HARDHAT ETHERS.JS TEST 4 : Get the decimals from the the deployed smart contract and check the result." line="22">
<kw name="Get Default Decimals" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:39.753" level="INFO">${RESULT} = {'decimals': 18}</msg>
<status status="PASS" starttime="20230205 23:27:39.583" endtime="20230205 23:27:39.753"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>decimals</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:39.754" level="INFO">{'decimals': 18}</msg>
<status status="PASS" starttime="20230205 23:27:39.754" endtime="20230205 23:27:39.754"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.754" endtime="20230205 23:27:39.755"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.755" endtime="20230205 23:27:39.755"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.755" endtime="20230205 23:27:39.755"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.755" endtime="20230205 23:27:39.755"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.756" endtime="20230205 23:27:39.756"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.756" endtime="20230205 23:27:39.756"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.756" endtime="20230205 23:27:39.756"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:39.756" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:39.756" endtime="20230205 23:27:39.756"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.757" endtime="20230205 23:27:39.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.757" endtime="20230205 23:27:39.757"/>
</kw>
<status status="PASS" starttime="20230205 23:27:39.754" endtime="20230205 23:27:39.757"/>
</kw>
<status status="PASS" starttime="20230205 23:27:39.583" endtime="20230205 23:27:39.757"/>
</test>
<test id="s1-t5" name="HARDHAT ETHERS.JS TEST 5 : Get total token supply from the the deployed smart contract and check the result." line="26">
<kw name="Get Total Supply" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:39.896" level="INFO">${RESULT} = {'totalSupplyFormatUnits': '18000.0'}</msg>
<status status="PASS" starttime="20230205 23:27:39.758" endtime="20230205 23:27:39.896"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>totalSupplyFormatUnits</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:39.897" level="INFO">{'totalSupplyFormatUnits': '18000.0'}</msg>
<status status="PASS" starttime="20230205 23:27:39.897" endtime="20230205 23:27:39.897"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.897" endtime="20230205 23:27:39.898"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.898" endtime="20230205 23:27:39.898"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.898" endtime="20230205 23:27:39.898"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.898" endtime="20230205 23:27:39.899"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.899" endtime="20230205 23:27:39.900"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.900" endtime="20230205 23:27:39.901"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.901" endtime="20230205 23:27:39.901"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:39.901" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:39.901" endtime="20230205 23:27:39.902"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.902" endtime="20230205 23:27:39.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.902" endtime="20230205 23:27:39.902"/>
</kw>
<status status="PASS" starttime="20230205 23:27:39.897" endtime="20230205 23:27:39.902"/>
</kw>
<status status="PASS" starttime="20230205 23:27:39.758" endtime="20230205 23:27:39.903"/>
</test>
<test id="s1-t6" name="HARDHAT ETHERS.JS TEST 6 : Get balance of tokens from the address of the deployed smart contract owner and check the result." line="30">
<kw name="Get Token Balance Address" library="Remote">
<var>${TOKEN_ADDRESS}</var>
<msg timestamp="20230205 23:27:39.925" level="INFO">${TOKEN_ADDRESS} = {'testTokenAddress': '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}</msg>
<status status="PASS" starttime="20230205 23:27:39.904" endtime="20230205 23:27:39.925"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${TOKEN_ADDRESS}</arg>
<arg>testTokenAddress</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:39.926" level="INFO">{'testTokenAddress': '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}</msg>
<status status="PASS" starttime="20230205 23:27:39.926" endtime="20230205 23:27:39.926"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.926" endtime="20230205 23:27:39.926"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.926" endtime="20230205 23:27:39.926"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.927" endtime="20230205 23:27:39.927"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.927" endtime="20230205 23:27:39.927"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.927" endtime="20230205 23:27:39.927"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.927" endtime="20230205 23:27:39.928"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:39.928" endtime="20230205 23:27:39.928"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:39.928" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:39.928" endtime="20230205 23:27:39.928"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.928" endtime="20230205 23:27:39.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:39.929" endtime="20230205 23:27:39.929"/>
</kw>
<status status="PASS" starttime="20230205 23:27:39.925" endtime="20230205 23:27:39.929"/>
</kw>
<kw name="Get Balance Of Address" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:40.051" level="INFO">${RESULT} = {'addressBalance': '0.0'}</msg>
<status status="PASS" starttime="20230205 23:27:39.929" endtime="20230205 23:27:40.051"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>addressBalance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:40.052" level="INFO">{'addressBalance': '0.0'}</msg>
<status status="PASS" starttime="20230205 23:27:40.051" endtime="20230205 23:27:40.052"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.052" endtime="20230205 23:27:40.052"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.052" endtime="20230205 23:27:40.053"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.053" endtime="20230205 23:27:40.053"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.053" endtime="20230205 23:27:40.053"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.053" endtime="20230205 23:27:40.054"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.054" endtime="20230205 23:27:40.054"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.054" endtime="20230205 23:27:40.054"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:40.055" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:40.054" endtime="20230205 23:27:40.055"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.055" endtime="20230205 23:27:40.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.055" endtime="20230205 23:27:40.055"/>
</kw>
<status status="PASS" starttime="20230205 23:27:40.051" endtime="20230205 23:27:40.056"/>
</kw>
<status status="PASS" starttime="20230205 23:27:39.903" endtime="20230205 23:27:40.056"/>
</test>
<test id="s1-t7" name="HARDHAT ETHERS.JS TEST 7 : Transfer tokens to a target address from the contract owner address and check the result." line="36">
<kw name="Get Receiver Target Address" library="Remote">
<var>${RECEIVING_ADDRESS}</var>
<msg timestamp="20230205 23:27:40.078" level="INFO">${RECEIVING_ADDRESS} = {'receivingAddress': '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}</msg>
<status status="PASS" starttime="20230205 23:27:40.057" endtime="20230205 23:27:40.078"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RECEIVING_ADDRESS}</arg>
<arg>receivingAddress</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:40.079" level="INFO">{'receivingAddress': '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}</msg>
<status status="PASS" starttime="20230205 23:27:40.079" endtime="20230205 23:27:40.079"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.079" endtime="20230205 23:27:40.079"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.079" endtime="20230205 23:27:40.080"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.080" endtime="20230205 23:27:40.080"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.080" endtime="20230205 23:27:40.080"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.080" endtime="20230205 23:27:40.080"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.080" endtime="20230205 23:27:40.081"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.081" endtime="20230205 23:27:40.081"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:40.081" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:40.081" endtime="20230205 23:27:40.081"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.081" endtime="20230205 23:27:40.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.082" endtime="20230205 23:27:40.082"/>
</kw>
<status status="PASS" starttime="20230205 23:27:40.078" endtime="20230205 23:27:40.082"/>
</kw>
<kw name="Transfer To Target Address" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:40.649" level="FAIL">Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'", method="estimateGas", transaction={"from":"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266","to":"0x5FbDB2315678afecb367f032d93F642f64180aa3","data":"0xa9059cbb00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c80000000000000000000000000000000000000000000010f0cf064dd592000000","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: HttpProviderError\n    at HttpProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/http.js:50:23)\n    at AutomaticSenderProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/accounts.js:237:38)\n    at AutomaticGasProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:104:38)\n    at AutomaticGasPriceProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:111:42)\n    at BackwardsCompatibilityProviderAdapter.send (/Users/jgorospe/node_modules/hardhat/internal/core/providers/backwards-compatibility.js:29:31)\n    at EthersProviderWrapper.send (/Users/jgorospe/node_modules/@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper.js:11:52)\n    at EthersProviderWrapper.&lt;anonymous&gt; (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:747:51)\n    at step (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)\n    at Object.next (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)\n    at /Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:23:71","code":-32603,"_isProviderError":true,"data":{"message":"Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'","data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002645524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63650000000000000000000000000000000000000000000000000000"}}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)</msg>
<status status="FAIL" starttime="20230205 23:27:40.082" endtime="20230205 23:27:40.649"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>receiverBalanceFormatUnits</arg>
<status status="NOT RUN" starttime="20230205 23:27:40.650" endtime="20230205 23:27:40.650"/>
</kw>
<status status="FAIL" starttime="20230205 23:27:40.056" endtime="20230205 23:27:40.650">Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'", method="estimateGas", transaction={"from":"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266","to":"0x5FbDB2315678afecb367f032d93F642f64180aa3","data":"0xa9059cbb00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c80000000000000000000000000000000000000000000010f0cf064dd592000000","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: HttpProviderError\n    at HttpProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/http.js:50:23)\n    at AutomaticSenderProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/accounts.js:237:38)\n    at AutomaticGasProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:104:38)\n    at AutomaticGasPriceProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:111:42)\n    at BackwardsCompatibilityProviderAdapter.send (/Users/jgorospe/node_modules/hardhat/internal/core/providers/backwards-compatibility.js:29:31)\n    at EthersProviderWrapper.send (/Users/jgorospe/node_modules/@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper.js:11:52)\n    at EthersProviderWrapper.&lt;anonymous&gt; (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:747:51)\n    at step (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)\n    at Object.next (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)\n    at /Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:23:71","code":-32603,"_isProviderError":true,"data":{"message":"Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'","data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002645524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63650000000000000000000000000000000000000000000000000000"}}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)</status>
</test>
<test id="s1-t8" name="HARDHAT ETHERS.JS TEST 8 : Get balance of tokens from the address of the deployed smart contract owner after sending tokens to another address and check the result." line="42">
<kw name="Get Balance Of Address" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:40.686" level="INFO">${RESULT} = {'addressBalance': '0.0'}</msg>
<status status="PASS" starttime="20230205 23:27:40.652" endtime="20230205 23:27:40.686"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>addressBalance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:40.688" level="INFO">{'addressBalance': '0.0'}</msg>
<status status="PASS" starttime="20230205 23:27:40.687" endtime="20230205 23:27:40.688"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.688" endtime="20230205 23:27:40.689"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.689" endtime="20230205 23:27:40.689"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.689" endtime="20230205 23:27:40.690"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.690" endtime="20230205 23:27:40.691"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.691" endtime="20230205 23:27:40.691"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.691" endtime="20230205 23:27:40.692"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.692" endtime="20230205 23:27:40.692"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:40.693" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:40.692" endtime="20230205 23:27:40.693"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.693" endtime="20230205 23:27:40.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.693" endtime="20230205 23:27:40.694"/>
</kw>
<status status="PASS" starttime="20230205 23:27:40.687" endtime="20230205 23:27:40.694"/>
</kw>
<status status="PASS" starttime="20230205 23:27:40.651" endtime="20230205 23:27:40.694"/>
</test>
<test id="s1-t9" name="HARDHAT ETHERS.JS TEST 9 : Approve a specific amount of tokens for a target address, show the allowance, and check the result." line="46">
<kw name="Approve Spender Amount" library="Remote">
<var>${APPROVAL_OUTPUT}</var>
<msg timestamp="20230205 23:27:40.919" level="INFO">${APPROVAL_OUTPUT} = {'approvalSuccess': 'Amount has been approved'}</msg>
<status status="PASS" starttime="20230205 23:27:40.696" endtime="20230205 23:27:40.919"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${APPROVAL_OUTPUT}</arg>
<arg>approvalSuccess</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:40.920" level="INFO">{'approvalSuccess': 'Amount has been approved'}</msg>
<status status="PASS" starttime="20230205 23:27:40.920" endtime="20230205 23:27:40.920"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.920" endtime="20230205 23:27:40.920"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.921" endtime="20230205 23:27:40.921"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.921" endtime="20230205 23:27:40.921"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.921" endtime="20230205 23:27:40.921"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.921" endtime="20230205 23:27:40.922"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.922" endtime="20230205 23:27:40.922"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.922" endtime="20230205 23:27:40.923"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:40.923" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:40.923" endtime="20230205 23:27:40.923"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.923" endtime="20230205 23:27:40.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.923" endtime="20230205 23:27:40.924"/>
</kw>
<status status="PASS" starttime="20230205 23:27:40.919" endtime="20230205 23:27:40.924"/>
</kw>
<kw name="Show Spender Allowance" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:40.948" level="INFO">${RESULT} = {'showAllowance': '200000.0'}</msg>
<status status="PASS" starttime="20230205 23:27:40.924" endtime="20230205 23:27:40.948"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>showAllowance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:40.949" level="INFO">{'showAllowance': '200000.0'}</msg>
<status status="PASS" starttime="20230205 23:27:40.949" endtime="20230205 23:27:40.949"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.949" endtime="20230205 23:27:40.949"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.949" endtime="20230205 23:27:40.950"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.950" endtime="20230205 23:27:40.950"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.950" endtime="20230205 23:27:40.950"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.950" endtime="20230205 23:27:40.951"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.951" endtime="20230205 23:27:40.951"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.951" endtime="20230205 23:27:40.952"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:40.952" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:40.952" endtime="20230205 23:27:40.952"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.952" endtime="20230205 23:27:40.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.953" endtime="20230205 23:27:40.953"/>
</kw>
<status status="PASS" starttime="20230205 23:27:40.948" endtime="20230205 23:27:40.953"/>
</kw>
<status status="PASS" starttime="20230205 23:27:40.695" endtime="20230205 23:27:40.953"/>
</test>
<test id="s1-t10" name="HARDHAT ETHERS.JS TEST 10 : Transfer tokens from a target address to the contract owner address and check the result." line="52">
<kw name="Get Token Balance Address" library="Remote">
<var>${TOKEN_ADDRESS}</var>
<msg timestamp="20230205 23:27:40.970" level="INFO">${TOKEN_ADDRESS} = {'testTokenAddress': '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}</msg>
<status status="PASS" starttime="20230205 23:27:40.954" endtime="20230205 23:27:40.970"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${TOKEN_ADDRESS}</arg>
<arg>testTokenAddress</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:40.971" level="INFO">{'testTokenAddress': '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}</msg>
<status status="PASS" starttime="20230205 23:27:40.970" endtime="20230205 23:27:40.971"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.971" endtime="20230205 23:27:40.971"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.971" endtime="20230205 23:27:40.971"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.971" endtime="20230205 23:27:40.972"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.972" endtime="20230205 23:27:40.972"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.972" endtime="20230205 23:27:40.973"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.973" endtime="20230205 23:27:40.973"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.973" endtime="20230205 23:27:40.973"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:40.973" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:40.973" endtime="20230205 23:27:40.973"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.974" endtime="20230205 23:27:40.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.974" endtime="20230205 23:27:40.974"/>
</kw>
<status status="PASS" starttime="20230205 23:27:40.970" endtime="20230205 23:27:40.974"/>
</kw>
<kw name="Get Receiver Target Address" library="Remote">
<var>${RECEIVING_ADDRESS}</var>
<msg timestamp="20230205 23:27:40.991" level="INFO">${RECEIVING_ADDRESS} = {'receivingAddress': '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}</msg>
<status status="PASS" starttime="20230205 23:27:40.974" endtime="20230205 23:27:40.991"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RECEIVING_ADDRESS}</arg>
<arg>receivingAddress</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:40.992" level="INFO">{'receivingAddress': '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}</msg>
<status status="PASS" starttime="20230205 23:27:40.991" endtime="20230205 23:27:40.992"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.992" endtime="20230205 23:27:40.992"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.992" endtime="20230205 23:27:40.992"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.992" endtime="20230205 23:27:40.992"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.993" endtime="20230205 23:27:40.993"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.993" endtime="20230205 23:27:40.993"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.993" endtime="20230205 23:27:40.993"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:40.993" endtime="20230205 23:27:40.994"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:40.994" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:40.994" endtime="20230205 23:27:40.994"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.994" endtime="20230205 23:27:40.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:40.994" endtime="20230205 23:27:40.994"/>
</kw>
<status status="PASS" starttime="20230205 23:27:40.991" endtime="20230205 23:27:40.995"/>
</kw>
<kw name="Transfer From Target Address" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:41.319" level="FAIL">Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'", method="estimateGas", transaction={"from":"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266","to":"0x5FbDB2315678afecb367f032d93F642f64180aa3","data":"0x23b872dd00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c8000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000000000000000000000000025f273933db5700000","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: HttpProviderError\n    at HttpProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/http.js:50:23)\n    at AutomaticSenderProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/accounts.js:237:38)\n    at AutomaticGasProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:104:38)\n    at AutomaticGasPriceProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:111:42)\n    at BackwardsCompatibilityProviderAdapter.send (/Users/jgorospe/node_modules/hardhat/internal/core/providers/backwards-compatibility.js:29:31)\n    at EthersProviderWrapper.send (/Users/jgorospe/node_modules/@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper.js:11:52)\n    at EthersProviderWrapper.&lt;anonymous&gt; (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:747:51)\n    at step (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)\n    at Object.next (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)\n    at /Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:23:71","code":-32603,"_isProviderError":true,"data":{"message":"Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'","data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002645524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63650000000000000000000000000000000000000000000000000000"}}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)</msg>
<status status="FAIL" starttime="20230205 23:27:40.995" endtime="20230205 23:27:41.319"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>senderBalanceFormatUnits</arg>
<status status="NOT RUN" starttime="20230205 23:27:41.320" endtime="20230205 23:27:41.320"/>
</kw>
<status status="FAIL" starttime="20230205 23:27:40.954" endtime="20230205 23:27:41.320">Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'", method="estimateGas", transaction={"from":"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266","to":"0x5FbDB2315678afecb367f032d93F642f64180aa3","data":"0x23b872dd00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c8000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000000000000000000000000025f273933db5700000","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: HttpProviderError\n    at HttpProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/http.js:50:23)\n    at AutomaticSenderProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/accounts.js:237:38)\n    at AutomaticGasProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:104:38)\n    at AutomaticGasPriceProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:111:42)\n    at BackwardsCompatibilityProviderAdapter.send (/Users/jgorospe/node_modules/hardhat/internal/core/providers/backwards-compatibility.js:29:31)\n    at EthersProviderWrapper.send (/Users/jgorospe/node_modules/@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper.js:11:52)\n    at EthersProviderWrapper.&lt;anonymous&gt; (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:747:51)\n    at step (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)\n    at Object.next (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)\n    at /Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:23:71","code":-32603,"_isProviderError":true,"data":{"message":"Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'","data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002645524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63650000000000000000000000000000000000000000000000000000"}}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)</status>
</test>
<test id="s1-t11" name="HARDHAT ETHERS.JS TEST 11 : Increase the allowance of the spender account and check the result." line="60">
<kw name="Increase Spender Allowance" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:41.389" level="INFO">${RESULT} = {'showIncreasedAllowance': '202000.0'}</msg>
<status status="PASS" starttime="20230205 23:27:41.321" endtime="20230205 23:27:41.389"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>showIncreasedAllowance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:41.390" level="INFO">{'showIncreasedAllowance': '202000.0'}</msg>
<status status="PASS" starttime="20230205 23:27:41.390" endtime="20230205 23:27:41.390"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.391" endtime="20230205 23:27:41.391"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.391" endtime="20230205 23:27:41.391"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.391" endtime="20230205 23:27:41.392"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.392" endtime="20230205 23:27:41.392"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.392" endtime="20230205 23:27:41.392"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.392" endtime="20230205 23:27:41.393"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.393" endtime="20230205 23:27:41.393"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:41.393" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:41.393" endtime="20230205 23:27:41.393"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:41.393" endtime="20230205 23:27:41.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:41.394" endtime="20230205 23:27:41.395"/>
</kw>
<status status="PASS" starttime="20230205 23:27:41.389" endtime="20230205 23:27:41.395"/>
</kw>
<status status="PASS" starttime="20230205 23:27:41.321" endtime="20230205 23:27:41.396"/>
</test>
<test id="s1-t12" name="HARDHAT ETHERS.JS TEST 12 : Decrease the allowance of the spender account and check the result." line="64">
<kw name="Decrease Spender Allowance" library="Remote">
<var>${RESULT}</var>
<msg timestamp="20230205 23:27:41.477" level="INFO">${RESULT} = {'showDecreasedAllowance': '201000.0'}</msg>
<status status="PASS" starttime="20230205 23:27:41.397" endtime="20230205 23:27:41.477"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>showDecreasedAllowance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230205 23:27:41.478" level="INFO">{'showDecreasedAllowance': '201000.0'}</msg>
<status status="PASS" starttime="20230205 23:27:41.478" endtime="20230205 23:27:41.478"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.479" endtime="20230205 23:27:41.479"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.479" endtime="20230205 23:27:41.479"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.480" endtime="20230205 23:27:41.480"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.480" endtime="20230205 23:27:41.480"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.481" endtime="20230205 23:27:41.481"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.481" endtime="20230205 23:27:41.481"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230205 23:27:41.481" endtime="20230205 23:27:41.482"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230205 23:27:41.482" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230205 23:27:41.482" endtime="20230205 23:27:41.482"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:41.482" endtime="20230205 23:27:41.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230205 23:27:41.483" endtime="20230205 23:27:41.483"/>
</kw>
<status status="PASS" starttime="20230205 23:27:41.477" endtime="20230205 23:27:41.483"/>
</kw>
<status status="PASS" starttime="20230205 23:27:41.396" endtime="20230205 23:27:41.483"/>
</test>
<status status="FAIL" starttime="20230205 23:27:38.138" endtime="20230205 23:27:41.484"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Forked_Mainnet_Test</stat>
</tag>
<suite>
<stat pass="10" fail="2" skip="0" id="s1" name="Robot Framework Solidity Smart Contract Hardhat Network Fantom Test">Robot Framework Solidity Smart Contract Hardhat Network Fantom Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
