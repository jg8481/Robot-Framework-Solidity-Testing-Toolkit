<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.9.12 on darwin)" generated="20230209 01:18:39.783" rpa="false" schemaversion="3">
<suite id="s1" name="Robot Framework Solidity Smart Contract Hardhat Network Fantom Test" source="/Users/jgorospe/Documents/GitHub/Robot-Framework-Solidity-Testing-Toolkit_Dotenv_WIP/solidity-hardhat-multichain-tools/robotframework-hardhat-test-keywords.robot">
<test id="s1-t1" name="HARDHAT ETHERS.JS TEST 1 : Get the deployed smart contract using the hardhat-ethers plugin object and check the result." line="9">
<kw name="Get Contract" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:40.540" level="INFO">${RESULT} = {'checkContract': {'interface': {'fragments': [{'name': None, 'type': 'constructor', 'inputs': [], 'payable': False, 'stateMutability': 'nonpayable', 'gas': None, '_isFragment': True}, {'name': 'Appro...</msg>
<status status="PASS" starttime="20230209 01:18:39.928" endtime="20230209 01:18:40.540"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${RESULT}</arg>
<arg>errorName</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:40.540" endtime="20230209 01:18:40.541"/>
</kw>
<tag>Forked_Mainnet_Test</tag>
<status status="PASS" starttime="20230209 01:18:39.928" endtime="20230209 01:18:40.541"/>
</test>
<test id="s1-t2" name="HARDHAT ETHERS.JS TEST 2 : Get token name from the the deployed smart contract and check the result." line="14">
<kw name="Get Name" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:41.170" level="INFO">${RESULT} = {'name': 'PumpNoDump'}</msg>
<status status="PASS" starttime="20230209 01:18:40.542" endtime="20230209 01:18:41.170"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>name</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:41.171" level="INFO">{'name': 'PumpNoDump'}</msg>
<status status="PASS" starttime="20230209 01:18:41.171" endtime="20230209 01:18:41.171"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.172" endtime="20230209 01:18:41.172"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.172" endtime="20230209 01:18:41.172"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.172" endtime="20230209 01:18:41.172"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.172" endtime="20230209 01:18:41.173"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.173" endtime="20230209 01:18:41.173"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.173" endtime="20230209 01:18:41.173"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.173" endtime="20230209 01:18:41.174"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:41.174" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:41.174" endtime="20230209 01:18:41.174"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.174" endtime="20230209 01:18:41.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.174" endtime="20230209 01:18:41.175"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.170" endtime="20230209 01:18:41.175"/>
</kw>
<status status="PASS" starttime="20230209 01:18:40.541" endtime="20230209 01:18:41.175"/>
</test>
<test id="s1-t3" name="HARDHAT ETHERS.JS TEST 3 : Get token symbol from the the deployed smart contract and check the result." line="18">
<kw name="Get Symbol" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:41.303" level="INFO">${RESULT} = {'symbol': 'PND'}</msg>
<status status="PASS" starttime="20230209 01:18:41.176" endtime="20230209 01:18:41.303"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>symbol</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:41.304" level="INFO">{'symbol': 'PND'}</msg>
<status status="PASS" starttime="20230209 01:18:41.304" endtime="20230209 01:18:41.304"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.304" endtime="20230209 01:18:41.304"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.305" endtime="20230209 01:18:41.305"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.305" endtime="20230209 01:18:41.305"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.305" endtime="20230209 01:18:41.305"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.305" endtime="20230209 01:18:41.306"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.306" endtime="20230209 01:18:41.306"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.306" endtime="20230209 01:18:41.306"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:41.307" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:41.306" endtime="20230209 01:18:41.307"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.307" endtime="20230209 01:18:41.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.307" endtime="20230209 01:18:41.307"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.303" endtime="20230209 01:18:41.307"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.175" endtime="20230209 01:18:41.308"/>
</test>
<test id="s1-t4" name="HARDHAT ETHERS.JS TEST 4 : Get the decimals from the the deployed smart contract and check the result." line="22">
<kw name="Get Default Decimals" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:41.384" level="INFO">${RESULT} = {'decimals': 18}</msg>
<status status="PASS" starttime="20230209 01:18:41.309" endtime="20230209 01:18:41.384"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>decimals</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:41.385" level="INFO">{'decimals': 18}</msg>
<status status="PASS" starttime="20230209 01:18:41.385" endtime="20230209 01:18:41.385"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.385" endtime="20230209 01:18:41.385"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.386" endtime="20230209 01:18:41.386"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.386" endtime="20230209 01:18:41.386"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.386" endtime="20230209 01:18:41.386"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.386" endtime="20230209 01:18:41.387"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.387" endtime="20230209 01:18:41.387"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.387" endtime="20230209 01:18:41.387"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:41.388" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:41.387" endtime="20230209 01:18:41.388"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.388" endtime="20230209 01:18:41.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.388" endtime="20230209 01:18:41.388"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.384" endtime="20230209 01:18:41.388"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.308" endtime="20230209 01:18:41.389"/>
</test>
<test id="s1-t5" name="HARDHAT ETHERS.JS TEST 5 : Get total token supply from the the deployed smart contract and check the result." line="26">
<kw name="Get Total Supply" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:41.480" level="INFO">${RESULT} = {'totalSupplyFormatUnits': '18000.0'}</msg>
<status status="PASS" starttime="20230209 01:18:41.390" endtime="20230209 01:18:41.480"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>totalSupplyFormatUnits</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:41.481" level="INFO">{'totalSupplyFormatUnits': '18000.0'}</msg>
<status status="PASS" starttime="20230209 01:18:41.481" endtime="20230209 01:18:41.481"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.481" endtime="20230209 01:18:41.482"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.482" endtime="20230209 01:18:41.482"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.482" endtime="20230209 01:18:41.482"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.482" endtime="20230209 01:18:41.483"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.483" endtime="20230209 01:18:41.483"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.483" endtime="20230209 01:18:41.483"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.483" endtime="20230209 01:18:41.483"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:41.484" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:41.483" endtime="20230209 01:18:41.484"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.484" endtime="20230209 01:18:41.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.484" endtime="20230209 01:18:41.484"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.480" endtime="20230209 01:18:41.484"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.389" endtime="20230209 01:18:41.485"/>
</test>
<test id="s1-t6" name="HARDHAT ETHERS.JS TEST 6 : Get balance of tokens from the address of the deployed smart contract owner and check the result." line="30">
<kw name="Get Token Balance Address" library="Remote">
<var>${TOKEN_ADDRESS}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:41.507" level="INFO">${TOKEN_ADDRESS} = {'testTokenAddress': '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}</msg>
<status status="PASS" starttime="20230209 01:18:41.486" endtime="20230209 01:18:41.507"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${TOKEN_ADDRESS}</arg>
<arg>testTokenAddress</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:41.508" level="INFO">{'testTokenAddress': '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}</msg>
<status status="PASS" starttime="20230209 01:18:41.508" endtime="20230209 01:18:41.508"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.508" endtime="20230209 01:18:41.508"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.508" endtime="20230209 01:18:41.509"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.509" endtime="20230209 01:18:41.509"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.509" endtime="20230209 01:18:41.509"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.509" endtime="20230209 01:18:41.509"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.509" endtime="20230209 01:18:41.510"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.510" endtime="20230209 01:18:41.510"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:41.510" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:41.510" endtime="20230209 01:18:41.510"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.511" endtime="20230209 01:18:41.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.511" endtime="20230209 01:18:41.511"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.508" endtime="20230209 01:18:41.511"/>
</kw>
<kw name="Get Balance Of Address" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:41.601" level="INFO">${RESULT} = {'addressBalance': '0.0'}</msg>
<status status="PASS" starttime="20230209 01:18:41.511" endtime="20230209 01:18:41.601"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>addressBalance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:41.602" level="INFO">{'addressBalance': '0.0'}</msg>
<status status="PASS" starttime="20230209 01:18:41.602" endtime="20230209 01:18:41.602"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.602" endtime="20230209 01:18:41.602"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.603" endtime="20230209 01:18:41.603"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.603" endtime="20230209 01:18:41.603"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.603" endtime="20230209 01:18:41.603"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.604" endtime="20230209 01:18:41.604"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.604" endtime="20230209 01:18:41.604"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.604" endtime="20230209 01:18:41.604"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:41.605" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:41.604" endtime="20230209 01:18:41.605"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.605" endtime="20230209 01:18:41.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.605" endtime="20230209 01:18:41.605"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.601" endtime="20230209 01:18:41.605"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.485" endtime="20230209 01:18:41.605"/>
</test>
<test id="s1-t7" name="HARDHAT ETHERS.JS TEST 7 : Transfer tokens to a target address from the contract owner address and check the result." line="36">
<kw name="Get Receiver Target Address" library="Remote">
<var>${RECEIVING_ADDRESS}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:41.626" level="INFO">${RECEIVING_ADDRESS} = {'receivingAddress': '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}</msg>
<status status="PASS" starttime="20230209 01:18:41.606" endtime="20230209 01:18:41.626"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RECEIVING_ADDRESS}</arg>
<arg>receivingAddress</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:41.627" level="INFO">{'receivingAddress': '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}</msg>
<status status="PASS" starttime="20230209 01:18:41.627" endtime="20230209 01:18:41.627"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.627" endtime="20230209 01:18:41.627"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.627" endtime="20230209 01:18:41.627"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.627" endtime="20230209 01:18:41.627"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.627" endtime="20230209 01:18:41.628"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.628" endtime="20230209 01:18:41.628"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.628" endtime="20230209 01:18:41.628"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:41.628" endtime="20230209 01:18:41.628"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:41.629" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:41.628" endtime="20230209 01:18:41.629"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.629" endtime="20230209 01:18:41.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:41.629" endtime="20230209 01:18:41.629"/>
</kw>
<status status="PASS" starttime="20230209 01:18:41.626" endtime="20230209 01:18:41.629"/>
</kw>
<kw name="Transfer To Target Address" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:42.020" level="FAIL">Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'", method="estimateGas", transaction={"from":"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266","to":"0x5FbDB2315678afecb367f032d93F642f64180aa3","data":"0xa9059cbb00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c80000000000000000000000000000000000000000000010f0cf064dd592000000","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: HttpProviderError\n    at HttpProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/http.js:50:23)\n    at AutomaticSenderProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/accounts.js:237:38)\n    at AutomaticGasProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:104:38)\n    at AutomaticGasPriceProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:111:42)\n    at BackwardsCompatibilityProviderAdapter.send (/Users/jgorospe/node_modules/hardhat/internal/core/providers/backwards-compatibility.js:29:31)\n    at EthersProviderWrapper.send (/Users/jgorospe/node_modules/@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper.js:11:52)\n    at EthersProviderWrapper.&lt;anonymous&gt; (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:747:51)\n    at step (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)\n    at Object.next (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)\n    at /Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:23:71","code":-32603,"_isProviderError":true,"data":{"message":"Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'","data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002645524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63650000000000000000000000000000000000000000000000000000"}}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)</msg>
<status status="FAIL" starttime="20230209 01:18:41.629" endtime="20230209 01:18:42.021"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>receiverBalanceFormatUnits</arg>
<status status="NOT RUN" starttime="20230209 01:18:42.021" endtime="20230209 01:18:42.021"/>
</kw>
<status status="FAIL" starttime="20230209 01:18:41.606" endtime="20230209 01:18:42.022">Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'", method="estimateGas", transaction={"from":"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266","to":"0x5FbDB2315678afecb367f032d93F642f64180aa3","data":"0xa9059cbb00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c80000000000000000000000000000000000000000000010f0cf064dd592000000","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: HttpProviderError\n    at HttpProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/http.js:50:23)\n    at AutomaticSenderProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/accounts.js:237:38)\n    at AutomaticGasProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:104:38)\n    at AutomaticGasPriceProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:111:42)\n    at BackwardsCompatibilityProviderAdapter.send (/Users/jgorospe/node_modules/hardhat/internal/core/providers/backwards-compatibility.js:29:31)\n    at EthersProviderWrapper.send (/Users/jgorospe/node_modules/@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper.js:11:52)\n    at EthersProviderWrapper.&lt;anonymous&gt; (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:747:51)\n    at step (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)\n    at Object.next (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)\n    at /Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:23:71","code":-32603,"_isProviderError":true,"data":{"message":"Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'","data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002645524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63650000000000000000000000000000000000000000000000000000"}}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)</status>
</test>
<test id="s1-t8" name="HARDHAT ETHERS.JS TEST 8 : Get balance of tokens from the address of the deployed smart contract owner after sending tokens to another address and check the result." line="42">
<kw name="Get Balance Of Address" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:42.058" level="INFO">${RESULT} = {'addressBalance': '0.0'}</msg>
<status status="PASS" starttime="20230209 01:18:42.023" endtime="20230209 01:18:42.058"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>addressBalance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:42.059" level="INFO">{'addressBalance': '0.0'}</msg>
<status status="PASS" starttime="20230209 01:18:42.059" endtime="20230209 01:18:42.060"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.060" endtime="20230209 01:18:42.060"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.060" endtime="20230209 01:18:42.061"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.061" endtime="20230209 01:18:42.061"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.061" endtime="20230209 01:18:42.062"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.062" endtime="20230209 01:18:42.062"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.062" endtime="20230209 01:18:42.062"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.062" endtime="20230209 01:18:42.062"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:42.063" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:42.063" endtime="20230209 01:18:42.063"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.063" endtime="20230209 01:18:42.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.063" endtime="20230209 01:18:42.063"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.059" endtime="20230209 01:18:42.064"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.022" endtime="20230209 01:18:42.064"/>
</test>
<test id="s1-t9" name="HARDHAT ETHERS.JS TEST 9 : Approve a specific amount of tokens for a target address, show the allowance, and check the result." line="46">
<kw name="Approve Spender Amount" library="Remote">
<var>${APPROVAL_OUTPUT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:42.272" level="INFO">${APPROVAL_OUTPUT} = {'approvalSuccess': 'Amount has been approved'}</msg>
<status status="PASS" starttime="20230209 01:18:42.065" endtime="20230209 01:18:42.272"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${APPROVAL_OUTPUT}</arg>
<arg>approvalSuccess</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:42.272" level="INFO">{'approvalSuccess': 'Amount has been approved'}</msg>
<status status="PASS" starttime="20230209 01:18:42.272" endtime="20230209 01:18:42.272"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.273" endtime="20230209 01:18:42.273"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.273" endtime="20230209 01:18:42.273"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.273" endtime="20230209 01:18:42.273"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.273" endtime="20230209 01:18:42.274"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.274" endtime="20230209 01:18:42.274"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.274" endtime="20230209 01:18:42.274"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.274" endtime="20230209 01:18:42.274"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:42.275" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:42.274" endtime="20230209 01:18:42.275"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.275" endtime="20230209 01:18:42.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.275" endtime="20230209 01:18:42.275"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.272" endtime="20230209 01:18:42.275"/>
</kw>
<kw name="Show Spender Allowance" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:42.304" level="INFO">${RESULT} = {'showAllowance': '200000.0'}</msg>
<status status="PASS" starttime="20230209 01:18:42.275" endtime="20230209 01:18:42.304"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>showAllowance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:42.305" level="INFO">{'showAllowance': '200000.0'}</msg>
<status status="PASS" starttime="20230209 01:18:42.305" endtime="20230209 01:18:42.305"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.305" endtime="20230209 01:18:42.305"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.305" endtime="20230209 01:18:42.306"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.306" endtime="20230209 01:18:42.306"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.306" endtime="20230209 01:18:42.306"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.306" endtime="20230209 01:18:42.306"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.307" endtime="20230209 01:18:42.307"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.307" endtime="20230209 01:18:42.309"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:42.309" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:42.309" endtime="20230209 01:18:42.309"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.309" endtime="20230209 01:18:42.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.309" endtime="20230209 01:18:42.310"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.304" endtime="20230209 01:18:42.310"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.064" endtime="20230209 01:18:42.310"/>
</test>
<test id="s1-t10" name="HARDHAT ETHERS.JS TEST 10 : Transfer tokens from a target address to the contract owner address and check the result." line="52">
<kw name="Get Token Balance Address" library="Remote">
<var>${TOKEN_ADDRESS}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:42.329" level="INFO">${TOKEN_ADDRESS} = {'testTokenAddress': '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}</msg>
<status status="PASS" starttime="20230209 01:18:42.311" endtime="20230209 01:18:42.329"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${TOKEN_ADDRESS}</arg>
<arg>testTokenAddress</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:42.330" level="INFO">{'testTokenAddress': '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}</msg>
<status status="PASS" starttime="20230209 01:18:42.330" endtime="20230209 01:18:42.330"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.330" endtime="20230209 01:18:42.330"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.330" endtime="20230209 01:18:42.331"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.331" endtime="20230209 01:18:42.331"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.332" endtime="20230209 01:18:42.332"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.332" endtime="20230209 01:18:42.333"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.333" endtime="20230209 01:18:42.333"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.334" endtime="20230209 01:18:42.334"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:42.334" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:42.334" endtime="20230209 01:18:42.334"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.334" endtime="20230209 01:18:42.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.334" endtime="20230209 01:18:42.335"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.329" endtime="20230209 01:18:42.335"/>
</kw>
<kw name="Get Receiver Target Address" library="Remote">
<var>${RECEIVING_ADDRESS}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:42.353" level="INFO">${RECEIVING_ADDRESS} = {'receivingAddress': '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}</msg>
<status status="PASS" starttime="20230209 01:18:42.335" endtime="20230209 01:18:42.353"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RECEIVING_ADDRESS}</arg>
<arg>receivingAddress</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:42.354" level="INFO">{'receivingAddress': '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}</msg>
<status status="PASS" starttime="20230209 01:18:42.353" endtime="20230209 01:18:42.354"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.354" endtime="20230209 01:18:42.354"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.354" endtime="20230209 01:18:42.354"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.354" endtime="20230209 01:18:42.354"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.355" endtime="20230209 01:18:42.355"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.355" endtime="20230209 01:18:42.355"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.355" endtime="20230209 01:18:42.355"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.355" endtime="20230209 01:18:42.356"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:42.356" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:42.356" endtime="20230209 01:18:42.356"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.356" endtime="20230209 01:18:42.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.356" endtime="20230209 01:18:42.356"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.353" endtime="20230209 01:18:42.357"/>
</kw>
<kw name="Transfer From Target Address" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:42.555" level="FAIL">Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'", method="estimateGas", transaction={"from":"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266","to":"0x5FbDB2315678afecb367f032d93F642f64180aa3","data":"0x23b872dd00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c8000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000000000000000000000000025f273933db5700000","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: HttpProviderError\n    at HttpProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/http.js:50:23)\n    at AutomaticSenderProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/accounts.js:237:38)\n    at AutomaticGasProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:104:38)\n    at AutomaticGasPriceProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:111:42)\n    at BackwardsCompatibilityProviderAdapter.send (/Users/jgorospe/node_modules/hardhat/internal/core/providers/backwards-compatibility.js:29:31)\n    at EthersProviderWrapper.send (/Users/jgorospe/node_modules/@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper.js:11:52)\n    at EthersProviderWrapper.&lt;anonymous&gt; (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:747:51)\n    at step (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)\n    at Object.next (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)\n    at /Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:23:71","code":-32603,"_isProviderError":true,"data":{"message":"Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'","data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002645524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63650000000000000000000000000000000000000000000000000000"}}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)</msg>
<status status="FAIL" starttime="20230209 01:18:42.357" endtime="20230209 01:18:42.555"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>senderBalanceFormatUnits</arg>
<status status="NOT RUN" starttime="20230209 01:18:42.555" endtime="20230209 01:18:42.555"/>
</kw>
<status status="FAIL" starttime="20230209 01:18:42.310" endtime="20230209 01:18:42.555">Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'", method="estimateGas", transaction={"from":"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266","to":"0x5FbDB2315678afecb367f032d93F642f64180aa3","data":"0x23b872dd00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c8000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000000000000000000000000025f273933db5700000","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: HttpProviderError\n    at HttpProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/http.js:50:23)\n    at AutomaticSenderProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/accounts.js:237:38)\n    at AutomaticGasProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:104:38)\n    at AutomaticGasPriceProvider.request (/Users/jgorospe/node_modules/hardhat/internal/core/providers/gas-providers.js:111:42)\n    at BackwardsCompatibilityProviderAdapter.send (/Users/jgorospe/node_modules/hardhat/internal/core/providers/backwards-compatibility.js:29:31)\n    at EthersProviderWrapper.send (/Users/jgorospe/node_modules/@nomiclabs/hardhat-ethers/internal/ethers-provider-wrapper.js:11:52)\n    at EthersProviderWrapper.&lt;anonymous&gt; (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:747:51)\n    at step (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)\n    at Object.next (/Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)\n    at /Users/jgorospe/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:23:71","code":-32603,"_isProviderError":true,"data":{"message":"Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'","data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002645524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63650000000000000000000000000000000000000000000000000000"}}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)</status>
</test>
<test id="s1-t11" name="HARDHAT ETHERS.JS TEST 11 : Increase the allowance of the spender account and check the result." line="60">
<kw name="Increase Spender Allowance" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:42.620" level="INFO">${RESULT} = {'showIncreasedAllowance': '202000.0'}</msg>
<status status="PASS" starttime="20230209 01:18:42.557" endtime="20230209 01:18:42.620"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>showIncreasedAllowance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:42.621" level="INFO">{'showIncreasedAllowance': '202000.0'}</msg>
<status status="PASS" starttime="20230209 01:18:42.621" endtime="20230209 01:18:42.621"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.621" endtime="20230209 01:18:42.621"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.621" endtime="20230209 01:18:42.622"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.622" endtime="20230209 01:18:42.622"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.622" endtime="20230209 01:18:42.622"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.622" endtime="20230209 01:18:42.622"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.622" endtime="20230209 01:18:42.622"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.623" endtime="20230209 01:18:42.623"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:42.623" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:42.623" endtime="20230209 01:18:42.623"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.623" endtime="20230209 01:18:42.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.624" endtime="20230209 01:18:42.624"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.620" endtime="20230209 01:18:42.624"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.556" endtime="20230209 01:18:42.624"/>
</test>
<test id="s1-t12" name="HARDHAT ETHERS.JS TEST 12 : Decrease the allowance of the spender account and check the result." line="64">
<kw name="Decrease Spender Allowance" library="Remote">
<var>${RESULT}</var>
<arg>%{CONTRACT_ADDRESS}</arg>
<msg timestamp="20230209 01:18:42.705" level="INFO">${RESULT} = {'showDecreasedAllowance': '201000.0'}</msg>
<status status="PASS" starttime="20230209 01:18:42.625" endtime="20230209 01:18:42.705"/>
</kw>
<kw name="Check Smart Contract Results And Log Them">
<arg>${RESULT}</arg>
<arg>showDecreasedAllowance</arg>
<kw name="Log" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230209 01:18:42.706" level="INFO">{'showDecreasedAllowance': '201000.0'}</msg>
<status status="PASS" starttime="20230209 01:18:42.706" endtime="20230209 01:18:42.707"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.707" endtime="20230209 01:18:42.707"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.707" endtime="20230209 01:18:42.707"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.707" endtime="20230209 01:18:42.708"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.708" endtime="20230209 01:18:42.708"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.708" endtime="20230209 01:18:42.708"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.708" endtime="20230209 01:18:42.709"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230209 01:18:42.709" endtime="20230209 01:18:42.709"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230209 01:18:42.709" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230209 01:18:42.709" endtime="20230209 01:18:42.709"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.710" endtime="20230209 01:18:42.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${HARDHAT_OUTPUT}</arg>
<arg>${HARDHAT_CHECK}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230209 01:18:42.710" endtime="20230209 01:18:42.710"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.705" endtime="20230209 01:18:42.710"/>
</kw>
<status status="PASS" starttime="20230209 01:18:42.624" endtime="20230209 01:18:42.711"/>
</test>
<status status="FAIL" starttime="20230209 01:18:39.785" endtime="20230209 01:18:42.711"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Forked_Mainnet_Test</stat>
</tag>
<suite>
<stat pass="10" fail="2" skip="0" id="s1" name="Robot Framework Solidity Smart Contract Hardhat Network Fantom Test">Robot Framework Solidity Smart Contract Hardhat Network Fantom Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
