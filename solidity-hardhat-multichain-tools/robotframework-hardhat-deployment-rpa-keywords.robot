*** Settings ***
Library                       OperatingSystem
Library                       Process

*** Variables ***


${PATH}    ${EXECDIR}/solidity-hardhat-multichain-tools
${ETHEREUM_DEPLOYMENT}    disabled ### If you change this to "enabled" the "HARDHAT ETHEREUM DEPLOYMENT" automation below will attempt to run a deployment using the Ethereum.config.js file. You need a wallet private key set up in that file, otherwise it won't work.
${NETWORK}   hardhat ### This will deploy your smart contract to the local Hardhat Network Node. Comment this line if you want to try the Ethereum Sepolia Testnet below.
#${NETWORK}   sepolia ### This will deploy your smart contract to the Ethereum Sepolia Testnet if you un-comment this line. You need a wallet private key set to the provided Ethereum.config.js file, otherwise it won't work.

*** Tasks ***

HARDHAT DEPLOYMENT STEP 1 : Compile Solidity smart contracts using the "npx hardhat compile" command.
    Remove File    ${PATH}/logs/hardhat-contract-compile.log
    Run Process    cd ${PATH} && echo "..." > ./logs/hardhat-contract-compile.log && npx hardhat compile >> ./logs/hardhat-contract-compile.log    shell=yes
    ${OUTPUT}=    Get File    ${PATH}/logs/hardhat-contract-compile.log
    Log    ${OUTPUT}
    Log To Console    ...
    Log To Console    ...
    Log To Console    ...
    Log To Console    ${OUTPUT}
    Log To Console    ...
    Log To Console    ...
    Log To Console    ...
    Run Process    killall node && killall npm    shell=yes

HARDHAT DEPLOYMENT STEP 2 : Start a local JSON-RPC server node on top of the Hardhat Network "npx hardhat node" command, while forking the mainnet of a specific EVM compatible blockchain.
    Remove File    ${PATH}/logs/hardhat-${BLOCKCHAIN}-network-node.log
    Start Process    cd ${PATH} && echo "..." > ./logs/hardhat-${BLOCKCHAIN}-network-node.log && npx hardhat node --config ${BLOCKCHAIN}.config.js >> ./logs/hardhat-${BLOCKCHAIN}-network-node.log &    shell=yes
    Sleep    10s
    ${OUTPUT}=    Get File    ${PATH}/logs/hardhat-${BLOCKCHAIN}-network-node.log
    Log    ${OUTPUT}
    Log To Console    ...
    Log To Console    ...
    Log To Console    ...
    Log To Console    This local Hardhat Network deployment ran a fork of the ${BLOCKCHAIN} mainnet.
    Log To Console    ${OUTPUT}
    Log To Console    ...
    Log To Console    ...
    Log To Console    ...

HARDHAT DEPLOYMENT STEP 3 : Deploy the compiled Solidity smart contracts to the local Hardhat Network node.
    Remove File    ${PATH}/logs/hardhat-contract-deployment.log
    Run Process    cd ${PATH} && echo "..." > ./logs/hardhat-contract-deployment.log && npx hardhat run --network ${NETWORK} ./scripts/deploy.js >> ./logs/hardhat-contract-deployment.log    shell=yes
    ${OUTPUT}=    Get File    ${PATH}/logs/hardhat-contract-deployment.log
    Log    ${OUTPUT}
    Log To Console    ...
    Log To Console    ...
    Log To Console    ...
    Log To Console    ${OUTPUT}
    Log To Console    ...
    Log To Console    ...
    Log To Console    ...

HARDHAT ETHEREUM DEPLOYMENT : Deploy the compiled Solidity smart contracts to the Ethereum blockchain configured in the Ethereum.config.js file. This will skip quickly if any checks fail.
    [Tags]    robot:skip-on-failure    Ethereum_Blockchain_Test
    Skip If    '${ETHEREUM_DEPLOYMENT}' == 'disabled'
    Should Not Be Empty    ${ETHEREUM_DEPLOYMENT}
    Should Contain    ${ETHEREUM_DEPLOYMENT}    enabled
    Remove File    ${PATH}/logs/hardhat-contract-deployment.log
    Run Process    cd ${PATH} && echo "..." > ./logs/hardhat-contract-deployment.log && npx hardhat --config Ethereum.config.js run --network ${NETWORK} ./scripts/deploy.js >> ./logs/hardhat-contract-deployment.log    shell=yes
    ${OUTPUT}=    Get File    ${PATH}/logs/hardhat-contract-deployment.log
    Log    ${OUTPUT}
    Log To Console    ...
    Log To Console    ...
    Log To Console    ...
    Log To Console    ${OUTPUT}
    Log To Console    ...
    Log To Console    ...
    Log To Console    ...